/**
 * Utilityクラス
 */
var Util = navigator.userAgent.match(/Android/) ? {
    // Android用メソッド
    notifyNative: function (key, value) {
        // alert(key + ':' + value);
    }
} : {
    // iOS用メソッド
    notifyNative: function (key, value) {
        // document.location = key + ':' + value;
    }
}

/**
 * Google Map V3 地図描画JS
 */
var ApiWrap = {

    map_canvas: null,

    // 自動ルーティング（autoRoad）で描画したラインの消去メソッド
    _removeAutoRoad : null,
    // 自動ルーティング（autoRoad）で描画したラインの座標データ
    _latlngAutoRoad : null,
    // 自動ルーティング（autoRoad）で描画したラインの軌跡
    _locusPolylineAutoRoad : null,

    // ********************************************************************************
    // 地図初期化
    mapInitialize: function(lat, lng, zoom, option) {
        var option = option || {};
        var isSatellite = option.isSatellite || false;

        // 地図初期化
        var mapType = google.maps.MapTypeId.ROADMAP;
        if (isSatellite) {
            // mapType = google.maps.MapTypeId.HYBRID;     // ラベルあり航空写真
            mapType = google.maps.MapTypeId.SATELLITE;  // ラベルなし航空写真
        }
        var latlng = new google.maps.LatLng(lat, lng);
        var myOptions = {
            zoom: zoom,
            center: latlng,
            disableDefaultUI: true,
            navigationControl: true,
            zoomControl: true,
            navigationControlOptions: {
                style: google.maps.NavigationControlStyle.ZOOM_PAN
            },
            mapTypeId: mapType,
            tilt: 0     // 傾斜、デフォルト(45)だと航空写真で拡大したときに傾く
        };
        this.map_canvas = new google.maps.Map(document.getElementById("map_canvas"), myOptions);
        // /* Androidでinitialize時にrouteDirectDisplay.setMapを行わないと処理が継続できない */
        // var routeDirectDisplay = new google.maps.DirectionsRenderer({suppressMarkers: true});
        // routeDirectDisplay.setMap(this.map_canvas);
        
        // ドラッグ後に自由に街歩きで再検索をかけるかを判定するために「map_center:中心緯度,中心経度」を送っています
        google.maps.event.addListener(this.map_canvas, 'dragend', function() {
            var latlng = ApiWrap.map_canvas.getCenter();
            Util.notifyNative('map_center', latlng.lat() + ',' + latlng.lng());
        });
        
        // Map読み込み完了を通知
        Util.notifyNative('map_load_finish', '');
        //Main.setPolyline('navi_35.34857,35.347086,35.34575,35.345428,35.344883,35.344487,35.344163,35.343962,35.343787,35.343586,35.343393,35.34292,35.342675,35.341652,35.341153,35.340357,35.336551,35.331996,35.330711,35.330083,35.329575,35.329033,35.328612,35.328227,35.327877,35.327054,35.326724,35.326182,35.325954,35.325578,35.32167,35.318939,35.318116,35.317831,35.318016,35.317311,35.31715,35.315912,35.315203,35.314327,35.314187,35.314141,35.314005,35.31388,35.313802,35.313673,35.313676,35.313623,35.313476,35.313281,35.313182,35.313046,35.312793,35.312261,35.31208,35.311476,35.310692,35.310118,35.31008,35.309684,35.308414,35.308409,35.307764,35.307673,35.307675,35.307553,35.307129,35.30618,35.303398,35.299163,35.297628,35.297479,35.297454,35.299089,35.300439,35.302878,35.305354,35.307843,35.315146,35.319528,35.331313,35.331803,35.332325,35.332384,35.332811,35.332839,35.332981,35.333062,35.333447,35.333454,35.33357,35.333625,35.333772,35.333964,35.333846,35.334004,35.334142,35.334221,35.334201,35.335058,35.335285,35.335309,35.336043,35.337621,35.338825,35.352977,35.359687,35.361453,35.363513,35.364617,35.368531,35.36962,35.368634,35.368104,35.368325,35.370385,35.3709,35.373916,35.372739,35.372695,35.370267,35.370473,35.372949,35.375853,35.380682,35.38533,35.380044,35.384522,35.388505,35.390043,35.391093,35.392267,35.402009,35.403321,35.40523,35.407746,35.411863,35.412545,35.414204,35.416267,35.418714,35.4186,35.417603,35.41782,35.417831,35.417676,35.417034,35.417458,35.417493,35.417635,35.417381,35.416778,35.416665,35.416004,35.417775,35.419941,35.419471,35.416932,35.41287,35.407624,35.407558,35.407411,35.408419,35.40915,35.410371,35.410965,35.41064,35.410795,35.410639,35.411181,35.411317,35.411243,35.410925,35.410974,35.410865,35.410239,35.409204,35.410393,35.410874,35.411717,35.424248,35.424877,35.426101,35.426591,35.427229,35.427054,35.426477,35.425953,35.425358,35.425052,35.424676,35.424947,35.424641,35.424606,35.424186,35.423706,35.423592,35.423627,35.424041,35.423565,35.424109,35.423849,35.423008,35.422674,35.422303,35.422244,35.422821,35.42317,35.423433,35.42345,35.423651,35.423563,35.422348,35.421998,35.420835,35.419559,35.417124,35.416101,35.414438,35.412694,35.408292,35.40374,35.402,35.398963,35.396545,35.395203,35.393744,35.391252,35.389147,35.388346,35.389372,35.387854,35.386473,35.383823,35.381417,35.378042,35.373658,35.371068,35.365698,35.360413,35.359556,35.358391,35.358807,35.358422,35.358496,35.357122,35.355731,35.3532,35.350889,35.351885,35.352115,35.352026,35.351886,35.351639,35.351809,35.351991,35.351888,35.351796,35.351741,35.351326,35.351134,35.351077,35.350979,35.350853,35.351054,35.351185,35.351348,35.351709,35.351903,35.352003,35.351935,35.351723,35.351417,35.351335,35.351067,35.351052,35.351104,35.351056,35.350966,35.350732,35.350645,35.350266,35.349907,35.349798,35.349662,35.349572,35.349211,35.348807,35.349625,35.349487,35.349384,35.349294,35.349172,35.348971,35.348911,35.348893,35.34888,35.348854,35.348825,35.348797,35.34857_139.510148,139.511319,139.508376,139.508588,139.508649,139.508679,139.509301,139.509451,139.509559,139.50972,139.509934,139.510717,139.510943,139.511222,139.51164,139.512166,139.510308,139.498655,139.498783,139.500387,139.500366,139.500108,139.500323,139.500387,139.500173,139.498864,139.498787,139.498487,139.498315,139.498047,139.49641,139.496624,139.496392,139.496423,139.49574,139.495118,139.494541,139.494131,139.493691,139.493316,139.492876,139.49256,139.492037,139.491915,139.491274,139.491049,139.490884,139.490195,139.489828,139.489855,139.489634,139.489482,139.489044,139.48923,139.489336,139.490552,139.489916,139.489286,139.489258,139.489031,139.488259,139.488784,139.488698,139.488006,139.4874,139.4868,139.485743,139.484055,139.481565,139.487877,139.483598,139.481262,139.475102,139.473827,139.476771,139.481064,139.481793,139.480192,139.469635,139.438696,139.443491,139.443149,139.44314,139.442639,139.442472,139.442546,139.442578,139.442321,139.442458,139.442544,139.442564,139.442352,139.442388,139.442517,139.442706,139.442887,139.443004,139.443051,139.443184,139.443807,139.443866,139.443806,139.44379,139.443801,139.444198,139.440564,139.438272,139.43672,139.436937,139.440058,139.441755,139.438849,139.435403,139.434555,139.433472,139.432985,139.434248,139.433238,139.43239,139.431794,139.430495,139.428474,139.430276,139.430632,139.433494,139.415522,139.402069,139.399945,139.402918,139.403889,139.400306,139.398536,139.403525,139.405982,139.407027,139.40726,139.411547,139.411139,139.412013,139.413649,139.412853,139.413221,139.418702,139.41923,139.419263,139.419496,139.420081,139.420351,139.420207,139.420228,139.420459,139.420851,139.421996,139.424251,139.424906,139.424665,139.430348,139.434959,139.441873,139.441444,139.444717,139.449112,139.449384,139.449524,139.451338,139.452069,139.452095,139.452399,139.453279,139.453683,139.453777,139.453821,139.453923,139.454473,139.454799,139.45453,139.455072,139.454852,139.456376,139.456623,139.449873,139.449454,139.449905,139.449916,139.449916,139.450506,139.451857,139.453091,139.453563,139.453874,139.454561,139.455065,139.455559,139.455848,139.456127,139.456245,139.456685,139.457361,139.458011,139.45817,139.458535,139.459369,139.459824,139.460006,139.460105,139.460779,139.461884,139.462378,139.463451,139.464824,139.466929,139.470923,139.473144,139.474163,139.475987,139.477854,139.477495,139.477114,139.475829,139.476118,139.475543,139.475336,139.47474,139.477167,139.477008,139.47722,139.478039,139.479562,139.481184,139.483136,139.481057,139.483532,139.484445,139.484922,139.487244,139.492439,139.489967,139.488379,139.48818,139.485578,139.485455,139.489142,139.489308,139.491005,139.492615,139.495479,139.502517,139.50496,139.503523,139.505536,139.505798,139.506189,139.506147,139.506693,139.506809,139.506904,139.507105,139.507332,139.507325,139.507036,139.507257,139.507276,139.507121,139.5072,139.507705,139.507883,139.508067,139.508388,139.508392,139.508549,139.508792,139.50883,139.508768,139.508914,139.508842,139.508636,139.508559,139.50844,139.508445,139.508697,139.508939,139.508848,139.508767,139.508781,139.508729,139.508946,139.509424,139.509464,139.508807,139.509011,139.509171,139.509273,139.509461,139.509432,139.509904,139.510013,139.510083,139.510203,139.51027,139.510302,139.510148_35.3631529_139.3856023')

        //Main.setPolyline('navi_35.425918,35.322899,35.330182,35.421441_139.406342,139.463333,139.638428,139.606842_35.3631529_139.3856023')
        ApiWrap.viewPolyline2();
//35.425918, 139.406342
//35.322899, 139.463333
//35.330182, 139.638428
//35.421441, 139.606842

         var id = document.getElementById('map_canvas');

//           // Construct the polygon.
//            var bermudaTriangle = new google.maps.Polygon({
//              paths: triangleCoords,
//              strokeColor: '#FF0000',
//              strokeOpacity: 0.8,
//              strokeWeight: 2,
//              fillColor: '#FF0000',
//              fillOpacity: 0.35
//            });
//            bermudaTriangle.setMap(map);
//          }


    },
     //　paint
        setMap: function(){

        },
    // ********************************************************************************
    // マーカー描画
    viewMaker: function(lat, lng, icon){
        var markerOpts = {
            position: new google.maps.LatLng(lat, lng),
            map: this.map_canvas,
            icon: new google.maps.MarkerImage(
                icon.url,
                new google.maps.Size(icon.width, icon.height),
                new google.maps.Point(0, 0),
                new google.maps.Point(icon.offsetWidth, icon.offsetHeight)
            )
        }
        var marker = new google.maps.Marker(markerOpts);

        return marker;
    },
    // ********************************************************************************
    // マーカーを削除
    removeMaker: function(marker) {
        if (marker) {
            marker.setMap(null);
        }
    },


    // ********************************************************************************
    // 指定した緯度経度に移動
    setLocation: function(latlngdata) {
        // latlngdataは「緯度,経度」
        var myLocation = latlngdata.split(",");
        this.map_canvas.setCenter(new google.maps.LatLng(myLocation[0], myLocation[1]));
    },

    // ********************************************************************************
    // 現在地に移動（スムーズ）
    setLocationPanto: function (latlngdata) {
        // latlngdataは「緯度,経度」
        var myLocation = latlngdata.split(",");
        this.map_canvas.panTo(new google.maps.LatLng(myLocation[0], myLocation[1]));
    },

    // ********************************************************************************
    // 現在表示されている地図の中心緯度経度を取得
    getMapCenter: function() {
        var latlng = this.map_canvas.getCenter();
        Util.notifyNative('map_center', latlng.lat() + ',' + latlng.lng());
    },

    // ********************************************************************************
    // 現在表示されている地図の中心緯度経度とズームレベルを取得
    getMapCenterZoom: function() {
        var latlng = this.map_canvas.getCenter();
        var zoom = this.map_canvas.getZoom();
        Util.notifyNative('map_centerzoom', zoom + ',' + latlng.lat() + ',' + latlng.lng());
    },

    // ********************************************************************************
    // ズームレベル設定
    setMapZoom: function(zoomData) {
        this.map_canvas.setZoom(zoomData);
    },

    // ********************************************************************************
    // マーカーをクリックした際のイベントを付加する
    attachMessage: function(marker, no) {
        google.maps.event.addListener(marker, 'click', function(event) {
            Util.notifyNative('contents_id', no);
        });
    },

    // ********************************************************************************
    // ポリライン表示
    viewPolyline: function(latList, lngList, color, weight, opacity) {
        // latListは「緯度,緯度,・・・,緯度」
        // lngListは「緯度_経度,経度,・・・,経度」
        // colorは「#ff0000」形式

        var routeLatitudes = latList.split(",");
        var routeLongitudes = lngList.split(",");

        var routeData = new Array();
        for(var i=0; i<routeLatitudes.length; i++) {

            routeData[i] = new google.maps.LatLng(routeLatitudes[i], routeLongitudes[i]);
        }

        var zindex = 400;
        switch (color) {
            case "#0000ff": zindex = 100; break;
            case "#a0a000": zindex = 200; break;
            case "#ff0000": zindex = 300; break;
        }

//        var polylineOpts = {
//            path: routeData,
//            strokeWeight: weight,
//            strokeColor: color,
//            strokeOpacity: opacity,
//            zIndex: zindex,
//             fillColor: '#FF0000',
//                fillOpacity: 0.35
//        };
//        //polylineOpts.fillColor ="#FF0000" ;
//        var poly = new google.maps.Polygon(polylineOpts);
//        poly.setMap(this.map_canvas);




 var triangleCoords = [
    {lat: 35.369400, lng: 139.464734},
    {lat: 35.283777, lng: 139.536226},
    {lat: 35.289762, lng: 139.643006},
    {lat: 35.358935, lng: 139.618717}
  ];



        // Construct the polygon.
          var bermudaTriangle = new google.maps.Polygon({
            paths: triangleCoords,
            strokeColor: '#FF0000',
            strokeOpacity: 0.8,
            strokeWeight: 2,
            fillColor: '#FF0000',
            fillOpacity: 0.35
          });
          bermudaTriangle.setMap(this.map_canvas);


        return bermudaTriangle;
    },
 // ********************************************************************************
    // ポリライン表示
    viewPolyline2: function() {


//arrayPoints.add(new LatLng(arTestData.get(i).getYpos(), arTestData.get(i).getXpos()));


 var triangleCoords = [
    {lat:	35.34857	, lng: 	139.510148	},
    {lat:	35.347086	, lng: 	139.511319	},
    {lat:	35.34575	, lng: 	139.508376	},
    {lat:	35.345428	, lng: 	139.508588	},
    {lat:	35.344883	, lng: 	139.508649	},
    {lat:	35.344487	, lng: 	139.508679	},
    {lat:	35.344163	, lng: 	139.509301	},
    {lat:	35.343962	, lng: 	139.509451	},
    {lat:	35.343787	, lng: 	139.509559	},
    {lat:	35.343586	, lng: 	139.50972	},
    {lat:	35.343393	, lng: 	139.509934	},
    {lat:	35.34292	, lng: 	139.510717	},
    {lat:	35.342675	, lng: 	139.510943	},
    {lat:	35.341652	, lng: 	139.511222	},
    {lat:	35.341153	, lng: 	139.51164	},
    {lat:	35.340357	, lng: 	139.512166	},
    {lat:	35.336551	, lng: 	139.510308	},
    {lat:	35.331996	, lng: 	139.498655	},
    {lat:	35.330711	, lng: 	139.498783	},
    {lat:	35.330083	, lng: 	139.500387	},
    {lat:	35.329575	, lng: 	139.500366	},
    {lat:	35.329033	, lng: 	139.500108	},
    {lat:	35.328612	, lng: 	139.500323	},
    {lat:	35.328227	, lng: 	139.500387	},
    {lat:	35.327877	, lng: 	139.500173	},
    {lat:	35.327054	, lng: 	139.498864	},
    {lat:	35.326724	, lng: 	139.498787	},
    {lat:	35.326182	, lng: 	139.498487	},
    {lat:	35.325954	, lng: 	139.498315	},
    {lat:	35.325578	, lng: 	139.498047	},
    {lat:	35.32167	, lng: 	139.49641	},
    {lat:	35.318939	, lng: 	139.496624	},
    {lat:	35.318116	, lng: 	139.496392	},
    {lat:	35.317831	, lng: 	139.496423	},
    {lat:	35.318016	, lng: 	139.49574	},
    {lat:	35.317311	, lng: 	139.495118	},
    {lat:	35.31715	, lng: 	139.494541	},
    {lat:	35.315912	, lng: 	139.494131	},
    {lat:	35.315203	, lng: 	139.493691	},
    {lat:	35.314327	, lng: 	139.493316	},
    {lat:	35.314187	, lng: 	139.492876	},
    {lat:	35.314141	, lng: 	139.49256	},
    {lat:	35.314005	, lng: 	139.492037	},
    {lat:	35.31388	, lng: 	139.491915	},
    {lat:	35.313802	, lng: 	139.491274	},
    {lat:	35.313673	, lng: 	139.491049	},
    {lat:	35.313676	, lng: 	139.490884	},
    {lat:	35.313623	, lng: 	139.490195	},
    {lat:	35.313476	, lng: 	139.489828	},
    {lat:	35.313281	, lng: 	139.489855	},
    {lat:	35.313182	, lng: 	139.489634	},
    {lat:	35.313046	, lng: 	139.489482	},
    {lat:	35.312793	, lng: 	139.489044	},
    {lat:	35.312261	, lng: 	139.48923	},
    {lat:	35.31208	, lng: 	139.489336	},
    {lat:	35.311476	, lng: 	139.490552	},
    {lat:	35.310692	, lng: 	139.489916	},
    {lat:	35.310118	, lng: 	139.489286	},
    {lat:	35.31008	, lng: 	139.489258	},
    {lat:	35.309684	, lng: 	139.489031	},
    {lat:	35.308414	, lng: 	139.488259	},
    {lat:	35.308409	, lng: 	139.488784	},
    {lat:	35.307764	, lng: 	139.488698	},
    {lat:	35.307673	, lng: 	139.488006	},
    {lat:	35.307675	, lng: 	139.4874	},
    {lat:	35.307553	, lng: 	139.4868	},
    {lat:	35.307129	, lng: 	139.485743	},
    {lat:	35.30618	, lng: 	139.484055	},
    {lat:	35.303398	, lng: 	139.481565	},
    {lat:	35.299163	, lng: 	139.487877	},
    {lat:	35.297628	, lng: 	139.483598	},
    {lat:	35.297479	, lng: 	139.481262	},
    {lat:	35.297454	, lng: 	139.475102	},
    {lat:	35.299089	, lng: 	139.473827	},
    {lat:	35.300439	, lng: 	139.476771	},
    {lat:	35.302878	, lng: 	139.481064	},
    {lat:	35.305354	, lng: 	139.481793	},
    {lat:	35.307843	, lng: 	139.480192	},
    {lat:	35.315146	, lng: 	139.469635	},
    {lat:	35.319528	, lng: 	139.438696	},
    {lat:	35.331313	, lng: 	139.443491	},
    {lat:	35.331803	, lng: 	139.443149	},
    {lat:	35.332325	, lng: 	139.44314	},
    {lat:	35.332384	, lng: 	139.442639	},
    {lat:	35.332811	, lng: 	139.442472	},
    {lat:	35.332839	, lng: 	139.442546	},
    {lat:	35.332981	, lng: 	139.442578	},
    {lat:	35.333062	, lng: 	139.442321	},
    {lat:	35.333447	, lng: 	139.442458	},
    {lat:	35.333454	, lng: 	139.442544	},
    {lat:	35.33357	, lng: 	139.442564	},
    {lat:	35.333625	, lng: 	139.442352	},
    {lat:	35.333772	, lng: 	139.442388	},
    {lat:	35.333964	, lng: 	139.442517	},
    {lat:	35.333846	, lng: 	139.442706	},
    {lat:	35.334004	, lng: 	139.442887	},
    {lat:	35.334142	, lng: 	139.443004	},
    {lat:	35.334221	, lng: 	139.443051	},
    {lat:	35.334201	, lng: 	139.443184	},
    {lat:	35.335058	, lng: 	139.443807	},
    {lat:	35.335285	, lng: 	139.443866	},
    {lat:	35.335309	, lng: 	139.443806	},
    {lat:	35.336043	, lng: 	139.44379	},
    {lat:	35.337621	, lng: 	139.443801	},
    {lat:	35.338825	, lng: 	139.444198	},
    {lat:	35.352977	, lng: 	139.440564	},
    {lat:	35.359687	, lng: 	139.438272	},
    {lat:	35.361453	, lng: 	139.43672	},
    {lat:	35.363513	, lng: 	139.436937	},
    {lat:	35.364617	, lng: 	139.440058	},
    {lat:	35.368531	, lng: 	139.441755	},
    {lat:	35.36962	, lng: 	139.438849	},
    {lat:	35.368634	, lng: 	139.435403	},
    {lat:	35.368104	, lng: 	139.434555	},
    {lat:	35.368325	, lng: 	139.433472	},
    {lat:	35.370385	, lng: 	139.432985	},
    {lat:	35.3709	, lng: 	139.434248	},
    {lat:	35.373916	, lng: 	139.433238	},
    {lat:	35.372739	, lng: 	139.43239	},
    {lat:	35.372695	, lng: 	139.431794	},
    {lat:	35.370267	, lng: 	139.430495	},
    {lat:	35.370473	, lng: 	139.428474	},
    {lat:	35.372949	, lng: 	139.430276	},
    {lat:	35.375853	, lng: 	139.430632	},
    {lat:	35.380682	, lng: 	139.433494	},
    {lat:	35.38533	, lng: 	139.415522	},
    {lat:	35.380044	, lng: 	139.402069	},
    {lat:	35.384522	, lng: 	139.399945	},
    {lat:	35.388505	, lng: 	139.402918	},
    {lat:	35.390043	, lng: 	139.403889	},
    {lat:	35.391093	, lng: 	139.400306	},
    {lat:	35.392267	, lng: 	139.398536	},
    {lat:	35.402009	, lng: 	139.403525	},
    {lat:	35.403321	, lng: 	139.405982	},
    {lat:	35.40523	, lng: 	139.407027	},
    {lat:	35.407746	, lng: 	139.40726	},
    {lat:	35.411863	, lng: 	139.411547	},
    {lat:	35.412545	, lng: 	139.411139	},
    {lat:	35.414204	, lng: 	139.412013	},
    {lat:	35.416267	, lng: 	139.413649	},
    {lat:	35.418714	, lng: 	139.412853	},
    {lat:	35.4186	, lng: 	139.413221	},
    {lat:	35.417603	, lng: 	139.418702	},
    {lat:	35.41782	, lng: 	139.41923	},
    {lat:	35.417831	, lng: 	139.419263	},
    {lat:	35.417676	, lng: 	139.419496	},
    {lat:	35.417034	, lng: 	139.420081	},
    {lat:	35.417458	, lng: 	139.420351	},
    {lat:	35.417493	, lng: 	139.420207	},
    {lat:	35.417635	, lng: 	139.420228	},
    {lat:	35.417381	, lng: 	139.420459	},
    {lat:	35.416778	, lng: 	139.420851	},
    {lat:	35.416665	, lng: 	139.421996	},
    {lat:	35.416004	, lng: 	139.424251	},
    {lat:	35.417775	, lng: 	139.424906	},
    {lat:	35.419941	, lng: 	139.424665	},
    {lat:	35.419471	, lng: 	139.430348	},
    {lat:	35.416932	, lng: 	139.434959	},
    {lat:	35.41287	, lng: 	139.441873	},
    {lat:	35.407624	, lng: 	139.441444	},
    {lat:	35.407558	, lng: 	139.444717	},
    {lat:	35.407411	, lng: 	139.449112	},
    {lat:	35.408419	, lng: 	139.449384	},
    {lat:	35.40915	, lng: 	139.449524	},
    {lat:	35.410371	, lng: 	139.451338	},
    {lat:	35.410965	, lng: 	139.452069	},
    {lat:	35.41064	, lng: 	139.452095	},
    {lat:	35.410795	, lng: 	139.452399	},
    {lat:	35.410639	, lng: 	139.453279	},
    {lat:	35.411181	, lng: 	139.453683	},
    {lat:	35.411317	, lng: 	139.453777	},
    {lat:	35.411243	, lng: 	139.453821	},
    {lat:	35.410925	, lng: 	139.453923	},
    {lat:	35.410974	, lng: 	139.454473	},
    {lat:	35.410865	, lng: 	139.454799	},
    {lat:	35.410239	, lng: 	139.45453	},
    {lat:	35.409204	, lng: 	139.455072	},
    {lat:	35.410393	, lng: 	139.454852	},
    {lat:	35.410874	, lng: 	139.456376	},
    {lat:	35.411717	, lng: 	139.456623	},
    {lat:	35.424248	, lng: 	139.449873	},
    {lat:	35.424877	, lng: 	139.449454	},
    {lat:	35.426101	, lng: 	139.449905	},
    {lat:	35.426591	, lng: 	139.449916	},
    {lat:	35.427229	, lng: 	139.449916	},
    {lat:	35.427054	, lng: 	139.450506	},
    {lat:	35.426477	, lng: 	139.451857	},
    {lat:	35.425953	, lng: 	139.453091	},
    {lat:	35.425358	, lng: 	139.453563	},
    {lat:	35.425052	, lng: 	139.453874	},
    {lat:	35.424676	, lng: 	139.454561	},
    {lat:	35.424947	, lng: 	139.455065	},
    {lat:	35.424641	, lng: 	139.455559	},
    {lat:	35.424606	, lng: 	139.455848	},
    {lat:	35.424186	, lng: 	139.456127	},
    {lat:	35.423706	, lng: 	139.456245	},
    {lat:	35.423592	, lng: 	139.456685	},
    {lat:	35.423627	, lng: 	139.457361	},
    {lat:	35.424041	, lng: 	139.458011	},
    {lat:	35.423565	, lng: 	139.45817	},
    {lat:	35.424109	, lng: 	139.458535	},
    {lat:	35.423849	, lng: 	139.459369	},
    {lat:	35.423008	, lng: 	139.459824	},
    {lat:	35.422674	, lng: 	139.460006	},
    {lat:	35.422303	, lng: 	139.460105	},
    {lat:	35.422244	, lng: 	139.460779	},
    {lat:	35.422821	, lng: 	139.461884	},
    {lat:	35.42317	, lng: 	139.462378	},
    {lat:	35.423433	, lng: 	139.463451	},
    {lat:	35.42345	, lng: 	139.464824	},
    {lat:	35.423651	, lng: 	139.466929	},
    {lat:	35.423563	, lng: 	139.470923	},
    {lat:	35.422348	, lng: 	139.473144	},
    {lat:	35.421998	, lng: 	139.474163	},
    {lat:	35.420835	, lng: 	139.475987	},
    {lat:	35.419559	, lng: 	139.477854	},
    {lat:	35.417124	, lng: 	139.477495	},
    {lat:	35.416101	, lng: 	139.477114	},
    {lat:	35.414438	, lng: 	139.475829	},
    {lat:	35.412694	, lng: 	139.476118	},
    {lat:	35.408292	, lng: 	139.475543	},
    {lat:	35.40374	, lng: 	139.475336	},
    {lat:	35.402	, lng: 	139.47474	},
    {lat:	35.398963	, lng: 	139.477167	},
    {lat:	35.396545	, lng: 	139.477008	},
    {lat:	35.395203	, lng: 	139.47722	},
    {lat:	35.393744	, lng: 	139.478039	},
    {lat:	35.391252	, lng: 	139.479562	},
    {lat:	35.389147	, lng: 	139.481184	},
    {lat:	35.388346	, lng: 	139.483136	},
    {lat:	35.389372	, lng: 	139.481057	},
    {lat:	35.387854	, lng: 	139.483532	},
    {lat:	35.386473	, lng: 	139.484445	},
    {lat:	35.383823	, lng: 	139.484922	},
    {lat:	35.381417	, lng: 	139.487244	},
    {lat:	35.378042	, lng: 	139.492439	},
    {lat:	35.373658	, lng: 	139.489967	},
    {lat:	35.371068	, lng: 	139.488379	},
    {lat:	35.365698	, lng: 	139.48818	},
    {lat:	35.360413	, lng: 	139.485578	},
    {lat:	35.359556	, lng: 	139.485455	},
    {lat:	35.358391	, lng: 	139.489142	},
    {lat:	35.358807	, lng: 	139.489308	},
    {lat:	35.358422	, lng: 	139.491005	},
    {lat:	35.358496	, lng: 	139.492615	},
    {lat:	35.357122	, lng: 	139.495479	},
    {lat:	35.355731	, lng: 	139.502517	},
    {lat:	35.3532	, lng: 	139.50496	},
    {lat:	35.350889	, lng: 	139.503523	},
    {lat:	35.351885	, lng: 	139.505536	},
    {lat:	35.352115	, lng: 	139.505798	},
    {lat:	35.352026	, lng: 	139.506189	},
    {lat:	35.351886	, lng: 	139.506147	},
    {lat:	35.351639	, lng: 	139.506693	},
    {lat:	35.351809	, lng: 	139.506809	},
    {lat:	35.351991	, lng: 	139.506904	},
    {lat:	35.351888	, lng: 	139.507105	},
    {lat:	35.351796	, lng: 	139.507332	},
    {lat:	35.351741	, lng: 	139.507325	},
    {lat:	35.351326	, lng: 	139.507036	},
    {lat:	35.351134	, lng: 	139.507257	},
    {lat:	35.351077	, lng: 	139.507276	},
    {lat:	35.350979	, lng: 	139.507121	},
    {lat:	35.350853	, lng: 	139.5072	},
    {lat:	35.351054	, lng: 	139.507705	},
    {lat:	35.351185	, lng: 	139.507883	},
    {lat:	35.351348	, lng: 	139.508067	},
    {lat:	35.351709	, lng: 	139.508388	},
    {lat:	35.351903	, lng: 	139.508392	},
    {lat:	35.352003	, lng: 	139.508549	},
    {lat:	35.351935	, lng: 	139.508792	},
    {lat:	35.351723	, lng: 	139.50883	},
    {lat:	35.351417	, lng: 	139.508768	},
    {lat:	35.351335	, lng: 	139.508914	},
    {lat:	35.351067	, lng: 	139.508842	},
    {lat:	35.351052	, lng: 	139.508636	},
    {lat:	35.351104	, lng: 	139.508559	},
    {lat:	35.351056	, lng: 	139.50844	},
    {lat:	35.350966	, lng: 	139.508445	},
    {lat:	35.350732	, lng: 	139.508697	},
    {lat:	35.350645	, lng: 	139.508939	},
    {lat:	35.350266	, lng: 	139.508848	},
    {lat:	35.349907	, lng: 	139.508767	},
    {lat:	35.349798	, lng: 	139.508781	},
    {lat:	35.349662	, lng: 	139.508729	},
    {lat:	35.349572	, lng: 	139.508946	},
    {lat:	35.349211	, lng: 	139.509424	},
    {lat:	35.348807	, lng: 	139.509464	},
    {lat:	35.349625	, lng: 	139.508807	},
    {lat:	35.349487	, lng: 	139.509011	},
    {lat:	35.349384	, lng: 	139.509171	},
    {lat:	35.349294	, lng: 	139.509273	},
    {lat:	35.349172	, lng: 	139.509461	},
    {lat:	35.348971	, lng: 	139.509432	},
    {lat:	35.348911	, lng: 	139.509904	},
    {lat:	35.348893	, lng: 	139.510013	},
    {lat:	35.34888	, lng: 	139.510083	},
    {lat:	35.348854	, lng: 	139.510203	},
    {lat:	35.348825	, lng: 	139.51027	},
    {lat:	35.348797	, lng: 	139.510302	},
    {lat:	35.34857	, lng: 	139.510148	}

  ];

        // Construct the polygon.
          var bermudaTriangle = new google.maps.Polygon({
            paths: triangleCoords,
            strokeColor: '#FF0000',
            strokeOpacity: 0.8,
            strokeWeight: 2,
            fillColor: '#FF0000',
            fillOpacity: 0.35
          });
          bermudaTriangle.setMap(this.map_canvas);


        return bermudaTriangle;
    },
    // ********************************************************************************
    // ポリライン消去
    removePolyline: function(poly) {
        if(poly != null) {
            poly.setMap(null);
        }
    },

    // ********************************************************************************
    // マーカー跳ねる
    startMarkerBounce: function(marker){
        marker.setAnimation(google.maps.Animation.BOUNCE);
    },

    // ********************************************************************************
    // マーカー跳ねる停止
    stopMarkerBounce: function(marker){
        marker.setAnimation(null);
    },

    // ********************************************************************************
    // ルート検索実行
    routeSearchWalking: function(option){
        var startLat = option.startLat;
        var startLng = option.startLng;
        var endLat = option.endLat;
        var endLng = option.endLng;
        var isLinePaint = option.isLinePaint;
        var weight = option.weight;
        var color = option.color;
        var opacity = option.opacity;
        
        // 既に描画されているautoRoadがあれば消す
        this.removeAutoRoad();
        
        // 自動ルーティングのラインのオプション
        var directionLineOptions = {
            strokeOpacity: 0 // 実際にはこのラインは表示しない
        };
        var rendererOptions = {
            suppressMarkers : true,
            polylineOptions: directionLineOptions
        };
        var routeDirectDisplay = new google.maps.DirectionsRenderer(rendererOptions);
        routeDirectDisplay.setMap(this.map_canvas);

        var directServ = new google.maps.DirectionsService();
        var request = {
            origin: new google.maps.LatLng(startLat, startLng),
            destination: new google.maps.LatLng(endLat, endLng),
            travelMode: google.maps.DirectionsTravelMode.WALKING
        };
        // 成功・失敗時のコールバックを呼ぶ
        directServ.route(request, function(request, status){
            if (status == google.maps.DirectionsStatus.OK){
                ApiWrap._autoRoadSuccessCallback(request, status, isLinePaint, routeDirectDisplay, color, weight, opacity);
            } else {
                ApiWrap._autoRoadErrorCallback(request, status);
            }
        });
    },

    // 自動ルーティング成功（歩き)のコールバック
    _autoRoadSuccessCallback: function(request, status, isLinePaint, routeDirectDisplay, color, weight, opacity) {

        var roadLatLngData = request.routes[0].overview_path;
        var returnData = "";
        for(var i=0; i<roadLatLngData.length; i++) {
            var returnLat = roadLatLngData[i].lat();
            var returnLng = roadLatLngData[i].lng();
            var seq = i+1;
            if(returnLat != undefined) {
                if (returnData == "") returnData += seq + ',' + returnLat + ',' + returnLng;
                else returnData += '_' + seq + ',' + returnLat + ',' + returnLng;
            }
        }
        // データを保持
        this._latlngAutoRoad = {
            lat: roadLatLngData.map(function (d) { return d.lat() }),
            lng: roadLatLngData.map(function (d) { return d.lng() })
        }
        
        if(returnData != "") {
            if (isLinePaint){
                // ルート検索結果の描画
                // 表示位置とズームをあわせるために一度自動描画し、すぐに消す
                routeDirectDisplay.setDirections(request);
                setTimeout(function () {
                    routeDirectDisplay.setMap(null);
                }, 0);

                // 座標データから再描画 (後で軌跡を描く時にピッタリ重なるように)
                var latList = this._latlngAutoRoad.lat.join(",");
                var lngList = this._latlngAutoRoad.lng.join(",");
                var polyLine = this.viewPolyline(latList, lngList, color, weight, opacity);
                var self = this;
                // 消去用処理
                this._removeAutoRoad = function () {
                    polyLine.setMap(null);
                    if (self._locusPolylineAutoRoad) {
                        self._locusPolylineAutoRoad.setMap(null);
                    }
                }
            }
            // road_data:1,緯度1,経度1_2,緯度2,経度2_3,緯度3,経度3_・・・,n,緯度n,経度n を送出
            Util.notifyNative('road_data', returnData);
        }

    },
    // 自動ルーティング失敗（歩き)のコールバック
    _autoRoadErrorCallback: function(request, status) {
        // 特に今回は何もしません
    },

    // 自動ルーティングで描画したラインの消去
    removeAutoRoad: function () {
        if (this._removeAutoRoad) {
            this._removeAutoRoad();
            this._removeAutoRoad = null;
        }
    },

    // 自動ルーティングで描画したラインに軌跡を描画する
    setLocusPolylineAutoRoad: function (seq) {
        if (this._locusPolylineAutoRoad) {
            this._locusPolylineAutoRoad.setMap(null);
        }
        if (this._latlngAutoRoad) {
            var latList = this._latlngAutoRoad.lat.slice(0, seq + 1).join(",");
            var lngList = this._latlngAutoRoad.lng.slice(0, seq + 1).join(",");
            this._locusPolylineAutoRoad = this.viewPolyline(latList, lngList, "#00a0a0", 5, 0.4);
        }
    }
}
